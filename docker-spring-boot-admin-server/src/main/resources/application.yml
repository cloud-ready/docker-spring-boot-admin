eureka:
  client:
    enabled: ${EUREKA_CLIENT_ENABLED:true}
    register-with-eureka: ${EUREKA_CLIENT_REGISTERWITHEUREKA:false}
    #registryFetchIntervalSeconds: ${EUREKA_CLIENT_REGISTRYFETCHINTERVALSECONDS:5}
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://user:user_pass@standalone.eureka:8761/eureka/}
  instance:
    health-check-url-path: ${endpoints.health.path:/health}
    # eureka.instance.hostname affect Status->instances's url href (not text) value on dashboard
    hostname: ${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ipAddress}}}}}
    lease-renewal-interval-in-seconds: ${EUREKA_INSTANCE_LEASERENEWALINTERVALINSECONDS:10}
    prefer-ip-address: ${EUREKA_INSTANCE_PREFERIPADDRESS:false}
    status-page-url-path: ${endpoints.info.path:/info}
    # Registering a Secure Application
    #health-check-url: https://${eureka.instance.hostname}/
    #status-page-url: https://${eureka.instance.hostname}/

flyway:
  locations: ${FLYWAY_LOCATIONS:classpath:/db}

liquibase:
  enabled: ${LIQUIBASE_ENABLED:true}
  change-log: ${LIQUIBASE_CHANGELOG:classpath:/db/changelog/db.changelog-master.xml}

logging:
  file: ${LOGGING_FILE:logs/spring.log}
  level:
    root: ${LOGGING_LEVEL_ROOT:INFO}

endpoints:
  health.sensitive: ${ENDPOINTS_HEALTH_SENSITIVE:true}
  info.sensitive: ${ENDPOINTS_INFO_SENSITIVE:true}
  refresh:
    enabled: ${ENDPOINTS_REFRESH_ENABLED:true}
  restart:
    enabled: ${ENDPOINTS_RESTART_ENABLED:true}
  shutdown:
    enabled: ${ENDPOINTS_SHUTDOWN_ENABLED:true}

management:
  # spring-boot 1.x management properties
  context-path: ${MANAGEMENT_CONTEXTPATH:/actuator}
  health:
    mail.enabled: ${MANAGEMENT_HEALTH_MAIL_ENABLED:false}
  security:
    enabled: ${MANAGEMENT_SECURITY_ENABLED:true}
    roles: ${MANAGEMENT_SECURITY_ROLES:ACTUATOR} # no ROLE_ prefix here

  # spring-boot 2.x management properties
  endpoint:
    shutdown.enabled: ${MANAGEMENT_ENDPOINT_SHUTDOWN_ENABLED:true}
    health:
      show-details: ${MANAGEMENT_ENDPOINT_HEALTH_SHOWDETAILS:WHEN_AUTHORIZED}
      roles: ${MANAGEMENT_ENDPOINT_HEALTH_ROLES:ACTUATOR}
  endpoints:
    web:
      base-path: ${MANAGEMENT_ENDPOINTS_WEB_BASEPATH:/actuator}
      exposure:
        include: "${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:*}"
        exclude: "${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_EXCLUDE:}"

security: # spring-boot 1.x security properties
  basic.enabled: ${SPRING_SECURITY_ENABLED:true}
  user:
    name: ${SPRING_SECURITY_USER_NAME:admin}
    password: ${SPRING_SECURITY_USER_PASSWORD:admin_pass}
    role: ${SPRING_SECURITY_USER_ROLES:ACTUATOR, ADMIN, SUPERUSER, USER}

server.port: ${SERVER_PORT:1111}

spring:
  aop.auto: true
  application.name: ${SPRING_APPLICATION_NAME:spring-boot-admin-server}
  boot.admin:
    api-path: ${SPRING_BOOT_ADMIN_APIPATH:api/applications}
    auto-deregistration: ${SPRING_BOOT_ADMIN_AUTODEREGISTRATION:false}
    auto-registration: ${SPRING_BOOT_ADMIN_AUTOREGISTRATION:true}
    client:
      enabled: ${SPRING_BOOT_ADMIN_CLIENT_ENABLED:false}
    discovery:
      enabled: ${SPRING_BOOT_ADMIN_DISCOVERY_ENABLED:false}
    hazelcast:
      application-store: ${SPRING_BOOT_ADMIN_HAZELCAST_APPLICATIONSTORE:spring-boot-admin-application-store}
      enabled: ${SPRING_BOOT_ADMIN_HAZELCAST_ENABLED:true}
      event-store: ${SPRING_BOOT_ADMIN_HAZELCAST_EVENTSTORE:spring-boot-admin-event-store}
    monitor:
      period: ${SPRING_BOOT_ADMIN_MONITOR_PERIOD:10000}
      status-lifetime: ${SPRING_BOOT_ADMIN_MONITOR_STATUSLIFETIME:10000}
    notify:
      mail:
        #cc: ${SPRING_BOOT_ADMIN_NOTIFY_MAIL_CC:}
        enabled: ${SPRING_BOOT_ADMIN_NOTIFY_MAIL_ENABLED:false}
        #from: ${SPRING_BOOT_ADMIN_NOTIFY_MAIL_FROM:}
        ignore-changes: ${SPRING_BOOT_ADMIN_NOTIFY_MAIL_IGNORECHANGES:UNKNOWN:UP}
        subject: "${SPRING_BOOT_ADMIN_NOTIFY_MAIL_SUBJECT:#{application.name} (#{application.id}) is #{to.status}}"
        text: "${SPRING_BOOT_ADMIN_NOTIFY_MAIL_TEXT:#{application.name} (#{application.id})\nstatus changed from #{from.status} to #{to.status}\n\n#{application.healthUrl}}"
        to: ${SPRING_BOOT_ADMIN_NOTIFY_MAIL_TO:root@localhost}
    period: ${SPRING_BOOT_ADMIN_PERIOD:100000}
    register-once: ${SPRING_BOOT_ADMIN_REGISTERONCE:true}
    routes.endpoints: ${SPRING_BOOT_ADMIN_ROUTES_ENDPOINTS:activiti,auditevents,dump,configprops,env,flyway,heapdump,hystrix.stream,info,jolokia,liquibase,logfile,loggers,refresh,metrics,trace,turbine.stream}
    turbine:
      enabled: ${SPRING_BOOT_ADMIN_TURBINE_ENABLED:false}
    ui:
      title: ${SPRING_BOOT_ADMIN_UI_TITLE:Spring Boot Admin}
    url: ${SPRING_BOOT_ADMIN_URL:http://localhost:${server.port:${SERVER_PORT:1111}}} # comma split if there are multiple servers
    username: ${SPRING_SECURITY_USER_NAME:admin}
    password: ${SPRING_SECURITY_USER_PASSWORD:admin_pass}
  cloud:
    config:
      enabled: false
    inetutils:
      preferred-networks: ${SPRING_CLOUD_INETUTILS_PREFERREDNETWORKS:^192\.168\..+, ^172\.30\..+, ^10\..+}
      ignored-interfaces: ${SPRING_CLOUD_INETUTILS_IGNOREDINTERFACES:^[a-z]?tun[0-9]*, ^awdl[0-9]*, ^lo[0-9]*}
    service-registry:
      # see: org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration
      auto-registration:
        enabled: ${SPRING_CLOUD_SERVICEREGISTRY_AUTOREGISTRATION_ENABLED:true}
        fail-fast: ${SPRING_CLOUD_SERVICEREGISTRY_AUTOREGISTRATION_FAILFAST:true}
      # custom property
      auto-multi-registration.enabled: ${SPRING_CLOUD_SERVICEREGISTRY_AUTOREGISTRATION_ENABLED:${spring.cloud.service-registry.auto-registration.enabled:true}}
  datasource:
    driver-class-name: ${SPRING_DATASOURCE_DRIVERCLASSNAME:org.h2.Driver}
    password: ${SPRING_DATASOURCE_PASSWORD:}
    username: ${SPRING_DATASOURCE_USERNAME:sa}
    url: ${SPRING_DATASOURCE_URL:jdbc:h2:file:/tmp/h2db/spring-boot-admin-server/h2_database}
  h2.console.enabled: ${SPRING_H2_CONSOLE_ENABLED:true}
  jackson:
    serialization:
      indent_output: ${SPRINT_JACKSON_SERIALIZATION_INDENTOUTPUT:true}
      write-dates-as-timestamps: ${SPRINT_JACKSON_SERIALIZATION_WRITEDATESASTIMESTAMPS:false}
  mail:
    test-connection: ${SPRING_MAIL_TESTCONNECTION:false}
#  rabbitmq:
#    host: ${SPRING_RABBITMQ_HOST:cloudbus}
#    port: ${SPRING_RABBITMQ_PORT:5672}
#    username: ${SPRING_RABBITMQ_USERNAME:user}
#    password: ${SPRING_RABBITMQ_PASSWORD:user_pass}
  security: # spring-boot 2.x security properties
    enabled: ${SPRING_SECURITY_ENABLED:true} # see: https://github.com/spring-projects/spring-boot/issues/12323
    user:
      name: ${SPRING_SECURITY_USER_NAME:admin}
      password: ${SPRING_SECURITY_USER_PASSWORD:admin_pass}
      roles: ${SPRING_SECURITY_USER_ROLES:ACTUATOR, ADMIN, SUPERUSER, USER}

---
spring:
  profiles: client

spring.boot:
  admin:
    client:
      enabled: ${SPRING_BOOT_ADMIN_CLIENT_ENABLED:true}
      #health-url: ${SPRING_BOOT_ADMIN_CLIENT_HEALTHURL:}
      #management-url: ${SPRING_BOOT_ADMIN_CLIENT_MANAGEMENTURL:}
      metadata:
        user:
          name: ${security.user.name:${spring.security.user.name:${SPRING_SECURITY_USER_NAME:admin}}}
          password: ${security.user.password:${spring.security.user.password:${SPRING_SECURITY_USER_PASSWORD:admin_pass}}}
      name: ${SPRING_BOOT_ADMIN_CLIENT_NAME:${spring.application.name}}
      prefer-ip: ${SPRING_BOOT_ADMIN_CLIENT_PREFERIP:false}
      #service-base-url: ${SPRING_BOOT_ADMIN_CLIENT_SERVICEBASEURL:}
      #service-url: ${SPRING_BOOT_ADMIN_CLIENT_SERVICEURL:}
    turbine:
      clusters: ${SPRING_BOOT_ADMIN_TURBINE_CLUSTERS:default}
      enabled: ${SPRING_BOOT_ADMIN_TURBINE_ENABLED:true}
      location: ${SPRING_BOOT_ADMIN_TURBINE_LOCATION:${spring.application.name}}

---
spring:
  profiles: discovery

# see: https://github.com/codecentric/spring-boot-admin/tree/1.5.x/spring-boot-admin-samples/spring-boot-admin-sample-eureka
eureka:
  client:
    register-with-eureka: ${EUREKA_CLIENT_REGISTERWITHEUREKA:true}
  instance:
    metadataMap:
      applicationId: ${spring.application.name}
      management.context-path: ${server.context-path:}${management.endpoints.web.base-path:${management.context-path:}}
      management.port: ${server.port}
      user.name: ${security.user.name:${spring.security.user.name}}
      user.password: ${security.user.password:${spring.security.user.password}}
      health.path: ${spring.boot.admin.discovery.converter.health-endpoint-path:health}

feign:
  hystrix.enabled: ${FEIGN_HYSTRIX_ENABLED:true}

hystrix:
  stream:
    maxConcurrentConnections: ${HYSTRIX_STREAM_MAXCONCURRENTCONNECTIONS:10}
  config:
    stream:
      maxConcurrentConnections: ${HYSTRIX_CONFIG_STREAM_MAXCONCURRENTCONNECTIONS:10}

spring.boot:
  admin:
    discovery:
      converter:
        management-context-path: ${SPRING_BOOT_ADMIN_DISCOVERY_CONVERTER_MANAGEMENTCONTEXTPATH:${management.endpoints.web.base-path:${management.context-path:}}}
        health-endpoint-path: ${SPRING_BOOT_ADMIN_DISCOVERY_CONVERTER_HEALTHENDPOINTPATH:health}
      enabled: ${SPRING_BOOT_ADMIN_DISCOVERY_ENABLED:true}
      ignored-services: "${SPRING_BOOT_ADMIN_DISCOVERY_IGNOREDSERVICES:}"
      services: "${SPRING_BOOT_ADMIN_DISCOVERY_SERVICES:*}"

turbine:
  appConfig: ${TURBINE_APPCONFIG:${spring.application.name}}
  clusterNameExpression: ${TURBINE_CLUSTERNAMEEXPRESSION:new String("default")}
  combineHostPort: ${TURBINE_COMBINEHOSTPORT:true}
  # make turbine correctly aggregate streams from applications that have custom context-path
  # see: http://blog.didispace.com/spring-cloud-tips-4/
  # see: https://stackoverflow.com/questions/39511244/turbine-instanceurlsuffix-not-working
  #instanceInsertPort: ${TURBINE_INSTANCEINSERTPORT:false}
  instanceUrlSuffix: ${TURBINE_INSTANCEURLSUFFIX:${server.context-path:}${management.endpoints.web.base-path:${management.context-path:}}/hystrix.stream}

---
spring:
  profiles: port_nonsecure

eureka.instance:
  # eureka.instance.instance-id affect Status->instances's url text (not href) value on dashboard
  instance-id: ${spring.application.name}:${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ipAddress:}}}}}:${EUREKA_INSTANCE_NONSECUREPORT:${SERVER_PORT:${server.port}}}
  non-secure-port: ${EUREKA_INSTANCE_NONSECUREPORT:${SERVER_PORT:${server.port}}}
  non-secure-port-enabled: true
  secure-port-enabled: false

#logging:
#  file: ${LOGGING_FILE:${LOG_FILE:${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ipAddress}}}}}-${EUREKA_INSTANCE_NONSECUREPORT:${SERVER_PORT:${server.port}}}}.log}

spring.cloud.consul:
  discovery:
    health-check-url: http://${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ipAddress:}}}}}:${EUREKA_INSTANCE_NONSECUREPORT:${SERVER_PORT:${server.port:80}}}${SERVER_CONTEXTPATH:${server.context-path:}}${MANAGEMENT_CONTEXTPATH:${management.context-path:}}/health
    # consul's instance-id must start with letters, hostname could be an ip address, so place spring.application.name at first position.
    instance-id: ${spring.application.name}:${SPRING_CLOUD_CONSUL_DISCOVERY_HOSTNAME:${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ipAddress:}}}}}}:${EUREKA_INSTANCE_NONSECUREPORT:${SERVER_PORT:${server.port}}}

---
spring:
  profiles: port_secure

eureka.instance:
  # eureka.instance.instance-id affect Status->instances's url text (not href) value on dashboard
  instance-id: ${spring.application.name}:${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ipAddress:}}}}}:${EUREKA_INSTANCE_SECUREPORT:${SERVER_PORT:${server.port}}}
  non-secure-port-enabled: false
  secure-port: ${EUREKA_INSTANCE_SECUREPORT:${SERVER_PORT:${server.port}}}
  secure-port-enabled: true

#logging:
#  file: ${LOGGING_FILE:${LOG_FILE:${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ipAddress}}}}}-${EUREKA_INSTANCE_SECUREPORT:${SERVER_PORT:${server.port}}}}.log}

spring.cloud.consul:
  discovery:
    health-check-url: https://${SPRING_CLOUD_CONSUL_DISCOVERY_HOSTNAME:${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ipAddress:}}}}}}:${EUREKA_INSTANCE_SECUREPORT:${SERVER_PORT:${server.port}}}${SERVER_CONTEXTPATH:${server.context-path:}}${MANAGEMENT_CONTEXTPATH:${management.context-path:}}/health
    # consul's instance-id must start with letters, hostname could be an ip address, so place spring.application.name at first position.
    instance-id: ${spring.application.name}:${SPRING_CLOUD_CONSUL_DISCOVERY_HOSTNAME:${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ipAddress:}}}}}}:${EUREKA_INSTANCE_SECUREPORT:${SERVER_PORT:${server.port}}}

---
spring:
  profiles: manual_ip_hostname

eureka.instance:
  hostname: ${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ipAddress:}}}}}
  ip-address: ${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ipAddress:}}}

spring.cloud:
  client:
    hostname: ${SPRING_CLOUD_CLIENT_HOSTNAME:}
    ipAddress: ${SPRING_CLOUD_CLIENT_IPADDRESS:}

---
spring.profiles: mail

available:
  application.yml#mail: true

location: spring-boot-admin-server/application.yml#mail

management:
  # spring-boot 1.x management properties
  health:
    mail.enabled: ${MANAGEMENT_HEALTH_MAIL_ENABLED:true}

spring:
  boot.admin:
    notify:
      mail.enabled: ${SPRING_BOOT_ADMIN_NOTIFY_MAIL_ENABLED:true}
  mail:
    host: ${SPRING_MAIL_HOST:smtp.example.com}
    test-connection: ${SPRING_MAIL_TESTCONNECTION:true}
    password: ${SPRING_MAIL_PASSWORD:smtp_user_pass}
    properties:
      mail.mime.address.strict: ${SPRING_MAIL_PROPERTIES_MAIL_MIME_ADDRESS_STRICT:false}
    username: ${SPRING_MAIL_USERNAME:smtp_user}
