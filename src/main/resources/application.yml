eureka:
  client:
    enabled: ${SERVICE_REGISTER_ENABLED:${EUREKA_CLIENT_ENABLED:false}}
    register-with-eureka: ${SERVICE_REGISTER_ENABLED:${EUREKA_CLIENT_REGISTERWITHEUREKA:false}}
    #registry-fetch-interval-seconds: ${EUREKA_CLIENT_REGISTRYFETCHINTERVALSECONDS:5}
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://user:user_pass@standalone.eureka:8761/eureka/}
  instance:
    health-check-url-path: ${server.servlet.context-path}${management.endpoints.web.base-path}/health
    # eureka.instance.hostname affect Status->instances's url href (not text) value on dashboard
    hostname: ${SPRING_CLOUD_CONSUL_DISCOVERY_HOSTNAME:${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${eureka.instance.ip-address:localhost}}}}
    ip-address: ${SPRING_CLOUD_CONSUL_DISCOVERY_IPADDRESS:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ip-address}}}}
    lease-renewal-interval-in-seconds: ${EUREKA_INSTANCE_LEASERENEWALINTERVALINSECONDS:10}
    metadataMap:
      applicationId: ${spring.application.name}

      management.context-path: ${server.servlet.context-path}${management.endpoints.web.base-path}
      management.port: ${management.server.port}
      health.path: ${spring.boot.admin.discovery.converter.health-endpoint-path:health}
      startup: ${random.int}
      user.name: ${spring.security.user.name:}
      user.password: ${spring.security.user.password:}
    prefer-ip-address: ${EUREKA_INSTANCE_PREFERIPADDRESS:false}
    status-page-url-path: ${server.servlet.context-path}${management.endpoints.web.base-path}/info
    # Registering a Secure Application
    #health-check-url: https://${eureka.instance.hostname}/
    #status-page-url: https://${eureka.instance.hostname}/

# logging request & response info, style can be http, curl, json, splunk
logbook:
  #exclude:
  include: "/**"
  format:
    style: ${LOGBOOK_FORMAT_STYLE:http}
  obfuscate:
    headers:
      #- Authorization
      - X-Secret
    parameters:
      - access_token
      - password
  write:
    max-body-size: 2000

logging:
  file: ${LOGGING_FILE:logs/spring.log}
  level:
    jndi: ${LOGGING_LEVEL_ROOT:INFO}
    de.codecentric.boot.admin.server.services.EndpointDetector: ${APPLICATION_INSPECT_LOGGING_LEVEL:${LOGGING_LEVEL_ROOT:INFO}}
    de.codecentric.boot.admin.server.services.endpoints: ${APPLICATION_INSPECT_LOGGING_LEVEL:${LOGGING_LEVEL_ROOT:INFO}}
    de.codecentric.boot.admin.server.services.StatusUpdater: ${APPLICATION_INSPECT_LOGGING_LEVEL:${LOGGING_LEVEL_ROOT:INFO}}
    de.codecentric.boot.admin.server.eventstore.ConcurrentMapEventStore: ${APPLICATION_INSPECT_LOGGING_LEVEL:${LOGGING_LEVEL_ROOT:INFO}}
    org.zalando.logbook: ${APPLICATION_INSPECT_LOGGING_LEVEL:${LOGGING_LEVEL_ROOT:INFO}}
    root: ${LOGGING_LEVEL_ROOT:INFO}









management:
  endpoint:
    shutdown.enabled: ${MANAGEMENT_ENDPOINT_SHUTDOWN_ENABLED:true}
    health:
      # ALWAYS, WHEN_AUTHORIZED
      show-details: ${MANAGEMENT_ENDPOINT_HEALTH_SHOWDETAILS:ALWAYS}
      #roles: ${MANAGEMENT_ENDPOINT_HEALTH_ROLES:ACTUATOR}
  endpoints:
    jmx:
      exposure:
        exclude: "${MANAGEMENT_ENDPOINTS_JMX_EXPOSURE_EXCLUDE:}"
        include: "${MANAGEMENT_ENDPOINTS_JMX_EXPOSURE_INCLUDE:*}"
    web: # since spring-boot 2.x
      base-path: ${MANAGEMENT_ENDPOINTS_WEB_BASEPATH:/actuator} # management.context-path deprecated since spring-boot 2.x
      exposure:
        exclude: "${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_EXCLUDE:}"
        include: "${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:*}"
  health:
    consul.enabled: ${MANAGEMENT_HEALTH_CONSUL_ENABLED:false}
    mail.enabled: ${MANAGEMENT_HEALTH_MAIL_ENABLED:false}
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
      sla:
        http.server.requests: 1ms,5ms
    enable:
      jvm: true
    export:
      datadog.enabled: true
    use-global-registry: true
  #port: # deprecated since spring-boot 2.x
  #security: # deprecated since spring-boot 2.x
  #  enabled: true
  #  roles: ADMIN # no ROLE_ prefix here
  server:
    port: ${server.port}

# consul needs endpoint.health to check service status,
# set sensitive to false will hide detailed infos but need not to authenticate.
# see: https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Migration-Guide
#endpoints.health.sensitive: ${ENDPOINTS_HEALTH_SENSITIVE:false} # deprecated since spring-boot 2.x

server:
  address: ${SERVER_ADDRESS:${eureka.instance.ip-address}}
  #context-path: ${SERVER_CONTEXTPATH:} # deprecated since spring-boot 2.x
  servlet:
    context-path: ${SERVER_SERVLET_CONTEXTPATH:} # since spring-boot 2.x
    session:
      timeout: ${SERVER_SERVLET_SESSION_TIMEOUT:2h}

spring.autoconfigure.exclude:
- org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration # spring-boot 1.x and 2.x
- org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration # spring-boot 1.x and 2.x

spring:
  aop.auto: true
  #application.name: ${SPRING_APPLICATION_NAME:spring-boot-admin-server}
  boot.admin:
    client:
      api-path: ${SPRING_BOOT_ADMIN_CLIENT_APIPATH:instances}
      auto-deregistration: ${SPRING_BOOT_ADMIN_CLIENT_AUTODEREGISTRATION:true}
      auto-registration: ${SPRING_BOOT_ADMIN_CLIENT_AUTOREGISTRATION:true}
      enabled: ${SPRING_BOOT_ADMIN_CLIENT_ENABLED:true}
      period: 10s
      register-once: ${SPRING_BOOT_ADMIN_CLIENT_REGISTERONCE:true}
      username: ${spring.security.user.name:}
      password: ${spring.security.user.password:}
    #context-path:
    discovery:
      enabled: ${SPRING_BOOT_ADMIN_DISCOVERY_ENABLED:false}
    # Customize com.hazelcast.config.Config in Java code causes 'Unsuccessful attempot append the events'
    # eventLog.replace(id, oldEvents, newEvents) in ConcurrentMapEventStore.doAppend failed
    hazelcast:
      enabled: ${SPRING_BOOT_ADMIN_HAZELCAST_ENABLED:true}
      event-store: ${SPRING_BOOT_ADMIN_HAZELCAST_EVENTSTORE:spring-boot-admin-application-store}
    monitor:
      status-interval: ${SPRING_BOOT_ADMIN_MONITOR_STATUSINTERVAL:10s}
      status-lifetime: ${SPRING_BOOT_ADMIN_MONITOR_STATUSLIFETIME:10s}
    notify:
      mail:
        #cc: ${SPRING_BOOT_ADMIN_NOTIFY_MAIL_CC:}
        enabled: ${SPRING_BOOT_ADMIN_NOTIFY_MAIL_ENABLED:false}
        #from: ${SPRING_BOOT_ADMIN_NOTIFY_MAIL_FROM:}
        ignore-changes: ${SPRING_BOOT_ADMIN_NOTIFY_MAIL_IGNORECHANGES:UNKNOWN:UP}
        subject: "${SPRING_BOOT_ADMIN_NOTIFY_MAIL_SUBJECT:#{application.name} (#{application.id}) is #{to.status}}"
        text: "${SPRING_BOOT_ADMIN_NOTIFY_MAIL_TEXT:#{application.name} (#{application.id})\nstatus changed from #{from.status} to #{to.status}\n\n#{application.healthUrl}}"
        to: ${SPRING_BOOT_ADMIN_NOTIFY_MAIL_TO:root@localhost}
    #probed-endpoints: ${SPRING_BOOT_ADMIN_PROBEDENDPOINTS:activiti,auditevents,dump,configprops,env,flyway,heapdump,hystrix.stream,info,jolokia,liquibase,logfile,loggers,refresh,metrics,trace,turbine.stream}
    #probed-endpoints: ${SPRING_BOOT_ADMIN_PROBEDENDPOINTS:}
    turbine:
      enabled: ${SPRING_BOOT_ADMIN_TURBINE_ENABLED:false}
    ui:
      title: ${SPRING_BOOT_ADMIN_UI_TITLE:Spring Boot Admin}
  cloud:
    config:
      enabled: false
    consul:
      discovery:
        enabled: ${SPRING_CLOUD_CONSUL_DISCOVERY_ENABLED:${SERVICE_REGISTER_ENABLED:false}}
        health-check-path: ${server.servlet.context-path:}${management.endpoints.web.base-path:}/health
        hostname: ${eureka.instance.hostname}
        ip-address: ${eureka.instance.ip-address}
        prefer-ip-address: ${SPRING_CLOUD_CONSUL_DISCOVERY_PREFERIPADDRESS:${eureka.instance.prefer-ip-address}}
      enabled: ${SPRING_CLOUD_CONSUL_ENABLED:false}
    discovery.client.composite-indicator.enabled: ${SERVICE_REGISTER_ENABLED:true}
    inetutils:
      preferred-networks: ${SPRING_CLOUD_INETUTILS_PREFERREDNETWORKS:^192\.168\..+, ^172\.30\..+, ^10\..+}
      ignored-interfaces: ${SPRING_CLOUD_INETUTILS_IGNOREDINTERFACES:^[a-z]?tun[0-9]*, ^awdl[0-9]*, ^lo[0-9]*}
    service-registry:
      # custom property
      auto-multi-registration.enabled: ${SERVICE_REGISTER_ENABLED:${SPRING_CLOUD_SERVICEREGISTRY_AUTOREGISTRATION_ENABLED:${spring.cloud.service-registry.auto-registration.enabled:true}}}
      # see: org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration
      auto-registration:
        enabled: ${SERVICE_REGISTER_ENABLED:${SPRING_CLOUD_SERVICEREGISTRY_AUTOREGISTRATION_ENABLED:false}}
        fail-fast: ${SPRING_CLOUD_SERVICEREGISTRY_AUTOREGISTRATION_FAILFAST:true}
  datasource:
    driver-class-name: ${SPRING_DATASOURCE_DRIVERCLASSNAME:org.h2.Driver}
    password: ${SPRING_DATASOURCE_PASSWORD:}
    username: ${SPRING_DATASOURCE_USERNAME:sa}
    url: ${SPRING_DATASOURCE_URL:jdbc:h2:file:/tmp/h2db/spring-boot-admin-server/h2_database}
  flyway:
    locations: ${FLYWAY_LOCATIONS:classpath:/db}
  h2.console.enabled: ${SPRING_H2_CONSOLE_ENABLED:true}
  jackson:
    serialization:
      indent_output: ${SPRINT_JACKSON_SERIALIZATION_INDENTOUTPUT:true}
      write-dates-as-timestamps: ${SPRINT_JACKSON_SERIALIZATION_WRITEDATESASTIMESTAMPS:false}
  liquibase:
    change-log: ${LIQUIBASE_CHANGELOG:classpath:/db/changelog/db.changelog-master.xml}
#    drop-first: ${LIQUIBASE_DROPFIRST:true}
    enabled: ${LIQUIBASE_ENABLED:true}
  mail:
    test-connection: ${SPRING_MAIL_TESTCONNECTION:false}
#  rabbitmq:
#    host: ${SPRING_RABBITMQ_HOST:cloudbus}
#    port: ${SPRING_RABBITMQ_PORT:5672}
#    username: ${SPRING_RABBITMQ_USERNAME:user}
#    password: ${SPRING_RABBITMQ_PASSWORD:user_pass}
  security: # spring-boot 2.x security properties
    enabled: ${SPRING_SECURITY_ENABLED:true} # see: https://github.com/spring-projects/spring-boot/issues/12323
    user:
      name: ${SPRING_SECURITY_USER_NAME:admin}
      password: ${SPRING_SECURITY_USER_PASSWORD:admin_pass}
      roles: ${SPRING_SECURITY_USER_ROLES:ACTUATOR, ADMIN, SUPERUSER, USER}

---
spring:
  profiles: client

eureka:
  client:
    register-with-eureka: ${SERVICE_REGISTER_ENABLED:${EUREKA_CLIENT_REGISTERWITHEUREKA:false}}

spring.boot:
  admin:
    client:
      enabled: ${SPRING_BOOT_ADMIN_CLIENT_ENABLED:true}
      instance:
        #health-url: ${SPRING_BOOT_ADMIN_CLIENT_HEALTHURL:}
        #management-url: ${SPRING_BOOT_ADMIN_CLIENT_MANAGEMENTURL:}
        metadata:
          user:
            name: ${spring.security.user.name:}
            password: ${spring.security.user.password:}
        name: ${SPRING_BOOT_ADMIN_CLIENT_NAME:${spring.application.name}}
        prefer-ip: ${SPRING_BOOT_ADMIN_CLIENT_PREFERIP:true}
        #service-base-url: ${SPRING_BOOT_ADMIN_CLIENT_SERVICEBASEURL:}
        #service-url: ${SPRING_BOOT_ADMIN_CLIENT_SERVICEURL:}
    turbine:
      clusters: ${SPRING_BOOT_ADMIN_TURBINE_CLUSTERS:default}
      enabled: ${SPRING_BOOT_ADMIN_TURBINE_ENABLED:true}
      location: ${SPRING_BOOT_ADMIN_TURBINE_LOCATION:${spring.application.name}}

spring.cloud:
  discovery.client.composite-indicator.enabled: ${SERVICE_REGISTER_ENABLED:false}
  service-registry:
    # see: org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration
    auto-registration:
      enabled: ${SERVICE_REGISTER_ENABLED:${SPRING_CLOUD_SERVICEREGISTRY_AUTOREGISTRATION_ENABLED:false}}

---
spring:
  profiles: discovery

eureka:
  client:
    register-with-eureka: ${SERVICE_REGISTER_ENABLED:${EUREKA_CLIENT_REGISTERWITHEUREKA:true}}

feign:
  hystrix.enabled: ${FEIGN_HYSTRIX_ENABLED:true}

hystrix:
  stream:
    maxConcurrentConnections: ${HYSTRIX_STREAM_MAXCONCURRENTCONNECTIONS:10}
  config:
    stream:
      maxConcurrentConnections: ${HYSTRIX_CONFIG_STREAM_MAXCONCURRENTCONNECTIONS:10}

#management:
#  health:
#    consul.enabled: true

spring.boot:
  admin:
    client:
      enabled: ${SPRING_BOOT_ADMIN_CLIENT_ENABLED:false}
    discovery:
      converter:
        management-context-path: ${SPRING_BOOT_ADMIN_DISCOVERY_CONVERTER_MANAGEMENTCONTEXTPATH:${management.endpoints.web.base-path}}
        health-endpoint-path: ${SPRING_BOOT_ADMIN_DISCOVERY_CONVERTER_HEALTHENDPOINTPATH:health}
      enabled: ${SPRING_BOOT_ADMIN_DISCOVERY_ENABLED:true}
      ignored-services: "${SPRING_BOOT_ADMIN_DISCOVERY_IGNOREDSERVICES:}"
      services: "${SPRING_BOOT_ADMIN_DISCOVERY_SERVICES:*}"

spring.cloud:
  discovery.client.composite-indicator.enabled: ${SERVICE_REGISTER_ENABLED:true}
  service-registry:
    # see: org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration
    auto-registration:
      enabled: ${SERVICE_REGISTER_ENABLED:${SPRING_CLOUD_SERVICEREGISTRY_AUTOREGISTRATION_ENABLED:true}}

turbine:
  appConfig: ${TURBINE_APPCONFIG:${spring.application.name}}
  clusterNameExpression: ${TURBINE_CLUSTERNAMEEXPRESSION:new String("default")}
  combineHostPort: ${TURBINE_COMBINEHOSTPORT:true}
  # make turbine correctly aggregate streams from applications that have custom context-path
  # see: http://blog.didispace.com/spring-cloud-tips-4/
  # see: https://stackoverflow.com/questions/39511244/turbine-instanceurlsuffix-not-working
  #instanceInsertPort: ${TURBINE_INSTANCEINSERTPORT:false}
  instanceUrlSuffix: ${TURBINE_INSTANCEURLSUFFIX:${server.servlet.context-path:}${management.endpoints.web.base-path:}/hystrix.stream}

---
spring:
  profiles: port_nonsecure

eureka.instance:
  # eureka.instance.instance-id affect Status->instances's url text (not href) value on dashboard
  instance-id: ${spring.application.name}:${eureka.instance.hostname}:${eureka.instance.non-secure-port}
  non-secure-port: ${server.port}
  non-secure-port-enabled: true
  secure-port-enabled: false

#logging:
#  file: ${LOGGING_FILE:${LOG_FILE:${eureka.instance.hostname}-${eureka.instance.secure-port}.log}}

server:
  port: ${EUREKA_INSTANCE_NONSECUREPORT:${SERVER_PORT:1111}}

spring.boot.admin:
  client.url: http://${eureka.instance.hostname}:${server.port}${server.servlet.context-path:}

spring.cloud.consul:
  discovery:
    health-check-url: http://${eureka.instance.hostname}:${eureka.instance.non-secure-port}${consul.discovery.health-check-path}
    # consul's instance-id must start with letters, hostname could be an ip address, so place spring.application.name at first position.
    instance-id: ${eureka.instance.instance-id}

---
spring:
  profiles: port_secure

eureka.instance:
  # eureka.instance.instance-id affect Status->instances's url text (not href) value on dashboard
  instance-id: ${spring.application.name}:${eureka.instance.hostname}:${eureka.instance.secure-port}
  non-secure-port-enabled: false
  secure-port: ${server.port}
  secure-port-enabled: true

#logging:
#  file: ${LOGGING_FILE:${LOG_FILE:${eureka.instance.hostname}-${eureka.instance.secure-port}.log}}

server:
  port: ${EUREKA_INSTANCE_SECUREPORT:${SERVER_PORT:1111}}

spring.boot.admin:
  client.url: https://${eureka.instance.hostname}:${server.port}${server.servlet.context-path:}

spring.cloud.consul:
  discovery:
    health-check-url: https://${eureka.instance.hostname}:${eureka.instance.secure-port}${consul.discovery.health-check-path}
    # consul's instance-id must start with letters, hostname could be an ip address, so place spring.application.name at first position.
    instance-id: ${eureka.instance.instance-id}

---
spring.profiles: mail

available:
  application.yml#mail: true

location: spring-boot-admin-server/application.yml#mail

#management:
#  # spring-boot 1.x management properties
#  health:
#    mail.enabled: ${MANAGEMENT_HEALTH_MAIL_ENABLED:true}

spring:
  boot.admin:
    notify:
      mail.enabled: ${SPRING_BOOT_ADMIN_NOTIFY_MAIL_ENABLED:true}
  mail:
    host: ${SPRING_MAIL_HOST:smtp.example.com}
    test-connection: ${SPRING_MAIL_TESTCONNECTION:true}
    password: ${SPRING_MAIL_PASSWORD:smtp_user_pass}
    properties:
      mail.mime.address.strict: ${SPRING_MAIL_PROPERTIES_MAIL_MIME_ADDRESS_STRICT:false}
    username: ${SPRING_MAIL_USERNAME:smtp_user}
